import java.util.BitSet;
import java.util.HashMap;

class Testing  {
	
	private byte[] peiceInfo = new byte[10]; 
	private GUI torrentGUI = new GUI();
	public int totalReceivedPackets(byte[] peiceInfo){
		   BitSet bitset = BitSet.valueOf(peiceInfo);  
		    return bitset.cardinality();
	}
	public HashMap<String,FetchPieces> inProgress;
	public void receivedPeice(int packetNumber){
		this.peiceInfo[packetNumber/8]=(byte)(this.peiceInfo[packetNumber/8]| 1<< packetNumber%8-1);
		
	public void getMap(){	
	}
	/*
	private void packetSimulator(){
		Thread downloader = new Thread(new Runnable() {
		Random randomPeiceNumber = new Random();	
			public void run() {
				while(totalReceivedPackets()<80){
					receivedPeice(randomPeiceNumber.nextInt());
					//torrentGUI;
					try {
						Thread.sleep(3000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		});
	}
	
*/
}


	
	
	
	
