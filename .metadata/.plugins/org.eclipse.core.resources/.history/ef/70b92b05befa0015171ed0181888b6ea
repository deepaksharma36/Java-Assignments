import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Random;


public class TestCaseGenerator {
private final String[] DNA ={"G","N","O","M"};
private final String[] Binary={"0","1"};
private final String[] alphabets={"a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"};
private final String[] numeric={"0","1","2","3","4","5","6","7","8","9"};
HashMap<String,ArrayList> types;
public TestCaseGenerator()
{
initHashMap();	
}
private void initHashMap()
{
	this.types.put("DNA",  new ArrayList<String>(Arrays.asList(DNA)));
	this.types.put("Binary",  new ArrayList<String>(Arrays.asList(Binary)));
	this.types.put("alphabets",  new ArrayList<String>(Arrays.asList(alphabets)));
	this.types.put("numeric",  new ArrayList<String>(Arrays.asList(numeric)));

}
public File TestCasesGenerator(int length ,ArrayList<String> type) throws IOException
{
	
    File testCases = new File("testCase.txt");
	if (!testCases.exists()) {
		testCases.createNewFile();
	}

    FileOutputStream fileWriter = new FileOutputStream(testCases);

	byte[] sequance1 = stringGenerator(length,type);
	byte[] sequance2 = stringGenerator(length,type);

	fileWriter.write(sequance1);
	fileWriter.write(sequance2);
	fileWriter.flush();
	fileWriter.close();

	return testCases;
}

private byte[] stringGenerator(int length , ArrayList<String> type)
   {ArrayList<String> container=createContainer(type);
	StringBuilder sampleString = new StringBuilder();
	Random indexGenerator= new Random();
	while (length>0)
	{
		sampleString.append(container.get(indexGenerator.nextInt(container.size())));
	}
   }
private ArrayList<String> createContainer(ArrayList<String> type)
{ArrayList<String> container = new ArrayList<String>();
for(String types: type )
	container.addAll(this.types.get(types));
return container;	
	}
}
