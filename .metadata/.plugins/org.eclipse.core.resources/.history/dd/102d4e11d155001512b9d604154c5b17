/**
 * This program determines all possible subsets for given Integer Number.
 * The complexity of the method is O(n*2^n)
 * @author Sharma, Deepak DS5930
 * @author Kurra, Sree Lakshmi SK9040
 * 
 */
public class Subsets {
/**
 * This Main Method takes number of element from command line 
 *  for calculating power set.  
 * @param args args store user input from command line in an String array
 */
public static void main(String[] args)
{   //long startTime=System.currentTimeMillis(); 
	int numberOfElements=Integer.parseInt(args[0]);
	// converted no of elements in integer using ParseInt method of the Integer class.
	int numberOfSubsets=(int)Math.pow(2, numberOfElements);
	// number of subsets for n elements are 2^n
	int indexCounterI=0, indexCounterJ=0, indexCounterK=0;
	String subSets[] = new String[numberOfSubsets];
	//SubSets string array stores all 2^n Subsets 
	subSets[0]="";
	// for generating all the combination of subsets, each element 
	//can make two choices either it can join 
	// an subset or not which makes 2^n combination for n elements.
	// For implementing the same by Using below nested loop we accessed all 
	//the present subsets in SubSets array and by appending new 
	// element we created further combinations and 
	//stored these combinations as well in same Subsets array.

	for (indexCounterI=1;indexCounterI<=numberOfElements;indexCounterI++)
	{   indexCounterK=0;
	  	for(indexCounterJ=0;indexCounterJ<(int)Math.pow(2,(indexCounterI-1)) ;indexCounterJ++)
	  	{
	  		subSets[(int)Math.pow(2,(indexCounterI-1))+indexCounterK]=
	  				subSets[indexCounterJ].concat(Integer.toString((indexCounterI)));
	  		
	  		
	  		indexCounterK=indexCounterK+1;
	  	}
	}

	//long endTime=System.currentTimeMillis();
	int counter=0;
	
	//Printing 2^n combination of elements  
	System.out.print("{  ");
	for(counter=0;counter<subSets.length;counter++)
	{
		System.out.print("{"+subSets[counter]+"}");
		//for printing ten subsets in each line 
		if(counter%10==0)
		System.out.println("");
	}
	System.out.print("  }"); 
}
	
}
